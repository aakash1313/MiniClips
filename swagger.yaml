# Guidelines
# * Explicitly specify the various http status codes an api endpoint can return.
# * If an endpoint can respond with a 200, 400, 401 and 500 http status code, then the responses section should specify all 4.
# * http status code 401 should be used when authentication is required and has failed
# * http status code 500 should be used when an internal server error occurred, such as a data api call timing out.
# * Any 500 http status code responses should also include a more detailed error code from errorCodes.json
swagger: "2.0"
info:
  version: "0.0.1"
  title: Member Api
# during development, host should point to your local machine
host: local.memapi.lifelock.com:8443
#host: int1-fe-memex-api.dev.aws.lifelock.com:443
#host: dev1-fe-memex-api.dev.aws.lifelock.com:443
# basePath prefixes all resource paths
basePath: /
#
schemes:
# tip: remove http to make production-grade
  - https
# format of bodies a client can send (Content-Type)
securityDefinitions:
  BasicAuth:
    type: basic
    description: Basic Authentication.
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
#
# Reference-able commonly used parameters
parameters:
  ClientId:
    name: client_id
    description: Expected in case of memberapp, otherwise optional.
    type: string
    in: header
    required: false
    enum:
      - memberapp
      - memberapp_dsp
      - cct
      - dwm
      - dsp
  AccessToken:
    name: access_token
    description: Memberapp's primary method of authentication. Not used by portal.
    type: string
    in: header
    required: false
  AccountId:
    name: account_id
    description: Hashed account-id, when operation should use jwt of dependent member (not the primary, logged-in member)
    type: string
    in: header
    required: false
#
paths:
  /v1/log:
    x-swagger-router-controller: logger
    post:
      description: Logs any information that clients specify.
      operationId: log
      produces:
        - application/json
      consumes:
        - application/json
        - application/octet-stream
      parameters:
        - $ref: "#/parameters/AccessToken"
        - $ref: "#/parameters/ClientId"
        - name: LogBody
          in: body
          description: log body
          required: false
          schema:
            $ref: "#/definitions/LogBody"
      responses:
        "200":
          description: String indicating success
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /healthy:
    x-swagger-router-controller: health
    get:
      description: Returns JSON indicating service status is up or down.
      operationId: status
      produces:
        - application/json
      consumes:
        - application/json
      security:
        - BasicAuth: []
      responses:
        "200":
          description: Healthy status
          schema:
            $ref: "#/definitions/HealthResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "503":
          description: Down for maintenance status
          schema:
            $ref: "#/definitions/HealthResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/credit/jwtToken:
    x-swagger-router-controller: credit
    get:
      description: Returns credit service JWT
      operationId: jwtToken
      produces:
        - application/json
      consumes:
        - application/json
        - application/octet-stream
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccountId"
        - $ref: "#/parameters/AccessToken"
      responses:
        "200":
          description: Credit service JWT
          schema:
            $ref: "#/definitions/CreditJwtTokenResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/ssoToken:
    x-swagger-router-controller: auth
    post:
      description: Given access token, returns SSO token.
      operationId: getSsoToken
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: SsoTokensBody
          in: body
          description: Your destination appname, not your own client id.
          required: true
          schema:
            $ref: "#/definitions/SsoTokensBody"
      responses:
        "200":
          description: SSO token
          schema:
            $ref: "#/definitions/SsoTokenResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized, AUTH_GET_SSO_TOKEN_ERROR:23004
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/alerts/detail/{alertId}:
    x-swagger-router-controller: alerts
    get:
      description: Returns the detailed information about a single alert.
      operationId: getDetail
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - $ref: "#/parameters/AccountId"
        - name: alertId
          in: path
          description: The id of the alert whose detail is being requested.
          required: true
          type: string
        - name: mobileLogin
          in: header
          type: boolean
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AlertDetailResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized, DATA_API_QUERY_ERROR
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Updates an alert by setting its disposition
      operationId: updateDetail
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - $ref: "#/parameters/AccountId"
        - name: alertId
          in: path
          description: The id of the alert whose detail is being updated.
          required: true
          type: string
        - name: mobileLogin
          in: header
          type: boolean
        - name: UpdateAlertBody
          in: body
          description: Disposition information
          required: true
          schema:
            $ref: "#/definitions/UpdateAlertBody"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AlertDetailResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized, DATA_API_QUERY_ERROR
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/alerts:
    x-swagger-router-controller: alerts
    get:
      description: Returns the list of alerts for the account corresponding to the access token parameter.
      operationId: getAlertList
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - $ref: "#/parameters/AccountId"
        - name: bucket
          in: query
          description: alert-grouping bucket ("inbox", "disputed", "archived" or the default of "all")
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AlertListResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized, DATA_API_QUERY_ERROR
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/alerts/dispositionByEmail/{token}/{alert_param}/{disposition_type}:
    x-swagger-router-controller: alerts
    get:
      description: Disposition an alert for a non-logged-in (email) flow
      operationId: dispositionByEmail
      produces:
        - text/html
      parameters:
        - name: token
          in: path
          description: One-time token generated for the purpose of alert disposition from a non-logged-in(email flow) user
          required: true
          type: string
        - name: alert_param
          in: path
          description: custom field with alert meta data.
          required: true
          type: string
        - name: disposition_type
          in: path
          description: User input of YES (1) or NO (0)
          required: true
          type: integer
      responses:
        "302":
          description: Redirect URL for the success
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized, DATA_API_QUERY_ERROR
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/alerts/dispositionByEmail///{disposition_type}:
    x-swagger-router-controller: alerts
    get:
      description: Disposition an alert for a non-logged-in (email) flow for migrated alerts.
      operationId: dispositionByEmailMigratedAlert
      produces:
       - text/html
      parameters :
       - name: disposition_type
         in: path
         description: User input of YES (1) or NO (0)
         required: true
         type: integer
      responses:
        "302":
          description: Redirect URL for the success
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized, DATA_API_QUERY_ERROR
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/auth/tokensByPassword:
    x-swagger-router-controller: auth
    post:
      description: Given a username and password, returns oauth access token, JWT, refresh token, member data.
      operationId: getTokensByPassword
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - name: TokensByPasswordBody
          in: body
          description: username, password are required
          required: true
          schema:
            $ref: "#/definitions/TokensByPasswordBody"
      responses:
        "200":
          description: Oauth access token, JWT, refresh token, member data
          schema:
            $ref: "#/definitions/TokensResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error, MEMBER_INFO_UPSTREAM:5001, DEPENDENT_MEMBER_ID:5005, REDIS_ERROR:22000
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/billing/info:
      x-swagger-router-controller: billing
      get:
        description: Retrieve Billing info
        operationId: getBillingInfo
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - $ref: "#/parameters/AccessToken"
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/BillingInfoResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
      put:
        description: Update Billing info
        operationId: updateBillingInfo
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - $ref: "#/parameters/AccessToken"
          - name: BillingInfoUpdateBody
            in: body
            required: true
            schema:
              $ref: "#/definitions/BillingInfoUpdateBody"
        responses:
          "200":
            description: Success
            schema:
              type: string
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
      post:
        description: Add Billing info
        operationId: addBillingInfo
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - $ref: "#/parameters/AccessToken"
          - $ref: "#/parameters/AccountId"
          - name: BillingInfoAddBody
            in: body
            required: true
            schema:
              $ref: "#/definitions/BillingInfoAddBody"
        responses:
          "200":
            description: Success
            schema:
              type: string
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /v1/billing/history:
      x-swagger-router-controller: billing
      get:
        description: Retrieves list of past payments
        operationId: getBillingHistory
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - $ref: "#/parameters/AccessToken"
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /v1/billing/members:
      x-swagger-router-controller: billing
      get:
        description: Retrieves list of billed members (primary + submembers) and the details for each
        operationId: getBillingMembers
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - $ref: "#/parameters/AccessToken"
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/BillingMembersResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /v1/members:
    x-swagger-router-controller: members
    get:
      description: Returns member information, plan and monitored accounts.
      operationId: getMemberInfoByToken
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: selfOnly
          in: query
          required: false
          description: If missing or false, fetches all dependents' memberinfo including self. If true, fetches self's member info.
          type: boolean
      responses:
        "200":
          description: Primary member or all members
          schema:
            $ref: '#/definitions/MemberInfoResponse'
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /v1/members/onboardingFlag:
    x-swagger-router-controller: members
    put:
      description: Updates onboarding flag after member has gone through onboarding flow
      operationId: updateOnboardingFlag
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: UpdateOnboardingFlagBody
          in: body
          required: true
          schema:
            $ref: "#/definitions/UpdateOnboardingFlagBody"
      produces:
        - application/json
      consumes:
        - application/json
      responses:
        "200":
          description: Flag successfully updated
          schema:
            type: string
            description: Success response.
  /v1/logout:
    x-swagger-router-controller: logout
    get:
      description: Terminates session and cleans up temporary storage.
      operationId: logout1
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
      responses:
        "200":
          description: Success
          schema:
            type: string
            description: Success response.
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Terminates session and cleans up temporary storage.
      operationId: logout
      produces:
        - application/json
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
      responses:
        "200":
          description: Success
          schema:
            type: string
            description: Success response.
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/redirectBySsoToken:
    x-swagger-router-controller: auth
    post:
      description: Given a SSO token, returns oauth access token, JWT, refresh token.
      operationId: redirectBySsoToken
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - name: sso_token
          in: header
          description: SSO token
          required: true
          type: string
        - name: TokensByClientCredentialsBody
          in: body
          description: Application details
          required: true
          schema:
            $ref: "#/definitions/TokensByClientCredentialsBody"
      responses:
        "200":
          description: Url to member web home.
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/redirectToStoreBySsoToken:
    x-swagger-router-controller: auth
    get:
      description: Redirects to webstore
      operationId: redirectToStoreBySsoToken
      produces:
        - text/html
      parameters:
        - $ref: "#/parameters/ClientId"
        - name: destinationapp
          in: query
          description: Destination app such as webstore, memberapp or agentproxy etc.
          required: true
          type: string
        - name: changeplanpromo
          in: query
          description: Change plan promo code.
          required: false
          type: string
        - name: addmemberpromo
          in: query
          description: Add member promo code .
          required: false
          type: string
        - name: info
          in: query
          description: Hashed account id of primary or secondary member.
          required: false
          type: string
        - name: redirectLocation
          in: query
          description: Different pages in memberstore such as attestation, plan, cycle, kba or addmember.
          required: true
          type: string
        - name: postloginpurchase
          in: query
          description: Its value is addmember. Check api.sso_redirect in old world.
          required: false
          type: string
      responses:
        "302":
          description: Url to member store.
          headers:
            Location:
              description: "redirect URI"
              type: "string"
          schema:
            type: "string"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/auth/tokensBySsoToken:
    x-swagger-router-controller: auth
    post:
      description: Given a SSO token, validates the token and returns a JWT and refresh token
      operationId: getTokensBySsoToken
      produces:
        - application/json
      consumes:
        - application/json
        - application/octet-stream
      parameters:
        - $ref: "#/parameters/ClientId"
        - name: sso_token
          in: header
          description: one time token
          required: true
          type: string
        - name: TokensBySsoTokenBody
          in: body
          description: flags for what optional data to include
          required: false
          schema:
            $ref: "#/definitions/TokensBySsoTokenBody"
      responses:
        "200":
          description: New tokens after validating
          schema:
            $ref: "#/definitions/TokensResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized, AUTH_UPSTREAM
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /nsl/oidcAuthUrl:
    x-swagger-router-controller: nortonSso
    post:
      description: returns OIDC auth url that will redirect with single-use access code
      operationId: oidcAuthUrl
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - name: OidcAuthUrlBody
          in: body
          description: OIDC auth url endpoint body
          required: true
          schema:
            $ref: "#/definitions/OidcAuthUrlBody"
      responses:
        "200":
          description: JSON containing NSL url that provides access code
          schema:
            $ref: "#/definitions/OidcAuthUrlResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/auth/tokensByRefreshToken:
    x-swagger-router-controller: auth
    post:
      description: Checks if an oauth access token is valid.
      operationId: getTokensByRefreshToken
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - name: RefreshTokenBody
          in: body
          description: refresh token body
          required: false
          schema:
            $ref: "#/definitions/RefreshTokenBody"
      responses:
        "200":
          description: new oauth access token, JWT and refresh token after successful refresh
          schema:
            $ref: "#/definitions/TokensResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            # tokensByNslToken
  /v1/auth/tokensByNslTokens:
    x-swagger-router-controller: nortonSso
    post:
      description: Create LL JWT using NSL access token and NSL refresh token
      operationId: tokensByNslTokens
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - name: LlJwtCreateBody
          in: body
          description: LL JWT create body
          required: true
          schema:
            $ref: "#/definitions/TokensByNslTokensBody"
      responses:
        "200":
          description: new LL JWT access token and LL JWT refresh token
          schema:
            $ref: "#/definitions/TokensResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/auth/tokensByNslClient:
    x-swagger-router-controller: nortonSso
    post:
      description: Renews LL JWT using LL refresh token and NSL client info
      operationId: tokensByNslClient
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - name: TokensByNslClientBody
          in: body
          description: TokensByNslClientBody
          required: true
          schema:
            $ref: "#/definitions/TokensByNslClientBody"
      responses:
        "200":
          description: new LL JWT and LL refresh token
          schema:
            $ref: "#/definitions/TokensResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/digital-cleaner/token:
    x-swagger-router-controller: digitalCleaner
    get:
      description: Provider hits this endpoint with handshake token after user adds any account (gmail, fb etc)
      operationId: digitalCleanerRedirect
      produces:
        - text/plain
        - text/html
      parameters:
        - name: token
          in: query
          type: string
          description: The handshake token between lifelock and provider.
        - name: client_id
          in: query
          type: string
        - name: destination
          in: query
          type: string
          description: Redirect to this destination after handshake. Clients can provide destination during handshake request.
      responses:
        "302":
          description: For web, redirecting to digital cleaner account added success page or destination provided in the initial request. For app, redirecting to page that fires a postMessage event on which app is listening.
          headers:
            Location:
              description: "redirect URI"
              type: "string"
          schema:
            type: "string"
  /v1/onlineAccountMonitoring/accounts:
    x-swagger-router-controller: onlineAccountMonitoring
    get:
      description: Retrieves the list of user's connected accounts
      operationId: getConnectedAccounts
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
      responses:
        "200":
          description: Returns success information
          schema:
            $ref: "#/definitions/OamConnectedAccountsResponse"
        "500":
          description: Internal server error, GET_STATES_FAILURE:4004
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/onlineAccountMonitoring/accounts/{id}:
    x-swagger-router-controller: onlineAccountMonitoring
    delete:
      description: Disconnects Account
      operationId: disconnectAccount
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Deletes account
          schema:
            $ref: "#/definitions/OamDisconnectAccountResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized, AUTH_GET_SSO_TOKEN_ERROR:23004
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/onlineAccountMonitoring/accounts/new:
    x-swagger-router-controller: onlineAccountMonitoring
    get:
      description: Redirects to bark for account connection
      operationId: connectAccount
      produces:
        - text/html
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: provider
          in: query
          description: Provider to connect to. gmail, facebook etc
          required: true
          type: string
        - name: redirect_path
          in: query
          description: redirect path to memberportal. ex - memberportal.lifelock.com/online-account-monitoring/add-account-success
          required: true
          type: string
      responses:
       "302":
         description: Redirecting to bark for account connection
         headers:
           Location:
             description: "redirect URI"
             type: "string"
         schema:
           type: "string"
  /v1/onlineAccountMonitoring/accounts/{id}/analyze:
     x-swagger-router-controller: onlineAccountMonitoring
     delete:
       description: Trigger analysis for the supplied account based on the last time it was analyzed.
       operationId: analyzeAccount
       produces:
         - application/json
       consumes:
         - application/json
       parameters:
         - $ref: "#/parameters/ClientId"
         - $ref: "#/parameters/AccessToken"
         - name: id
           in: path
           required: true
           type: string
       responses:
         "200":
           description: Analyze Account
           schema:
             $ref: "#/definitions/OamAnalyzeAccountResponse"
         "400":
           description: Bad request
           schema:
             $ref: "#/definitions/BadRequestResponse"
         "401":
           description: Unauthorized, AUTH_GET_SSO_TOKEN_ERROR:23004
           schema:
             $ref: "#/definitions/ErrorResponse"
         default:
           description: Error
           schema:
             $ref: "#/definitions/ErrorResponse"
  /v1/onlineAccountMonitoring/providers:
     x-swagger-router-controller: onlineAccountMonitoring
     get:
       description: Retrieves the list of various providers to connect to.
       operationId: getAllProviders
       produces:
         - application/json
       consumes:
         - application/json
       parameters:
         - $ref: "#/parameters/ClientId"
         - $ref: "#/parameters/AccessToken"
       responses:
         "200":
           description: Returns success information
           schema:
             $ref: "#/definitions/OamAllProvidersResponse"
         "500":
           description: Internal server error, GET_STATES_FAILURE:4004
           schema:
             $ref: "#/definitions/ErrorResponse"
         default:
           description: Error
           schema:
             $ref: "#/definitions/ErrorResponse"
  /v1/onlineAccountMonitoring/threats:
    x-swagger-router-controller: onlineAccountMonitoring
    get:
      description: Retrieves potential threats.
      operationId: getThreats
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
      responses:
        "200":
          description: Returns success information
          schema:
            $ref: "#/definitions/OamPotentialThreatsResponse"
        "500":
          description: Internal server error, GET_STATES_FAILURE:4004
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/onlineAccountMonitoring/threats/{id}:
    x-swagger-router-controller: onlineAccountMonitoring
    delete:
      description: Deletes threat
      operationId: deleteThreat
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Fix threat
          schema:
            $ref: "#/definitions/OamDeleteThreatResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized, AUTH_GET_SSO_TOKEN_ERROR:23004
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/onlineAccountMonitoring/threats/summary:
    x-swagger-router-controller: onlineAccountMonitoring
    get:
      description: Retrieves the overview of activities scanned
      operationId: getActivitiesScanOverview
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
      responses:
        "200":
          description: Returns success information
          schema:
            $ref: "#/definitions/OamActivitiesScannedOverviewResponse"
        "500":
          description: Internal server error, GET_STATES_FAILURE:4004
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/members/password:
    x-swagger-router-controller: memberUpdates
    post:
      description: Given a new password, updates the member's old password with new.
      operationId: updateMemberPassword
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: UpdateMemberPasswordBody
          in: body
          description: new password
          required: true
          schema:
            $ref: "#/definitions/UpdateMemberPasswordBody"
      responses:
        "200":
          description: Success information
          schema:
            $ref: "#/definitions/UpdatePasswordResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "500":
          description: Internal server error.  errorCodes UPDATE_MEMBER_PASSWORD
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/members/username:
    x-swagger-router-controller: memberUpdates
    post:
      description: Given a new username, updates the old name.
      operationId: updateMemberUsername
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: UpdateMemberUsernameBody
          in: body
          description: new username
          required: true
          schema:
            $ref: "#/definitions/UpdateMemberUsernameBody"
      responses:
        "200":
          description: Returns success information
          schema:
            $ref: "#/definitions/UpdatePasswordResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "500":
          description: Internal server error.  errorCodes FORGOT_MEMBER_USERNAME
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/members/email/pass:
    x-swagger-router-controller: memberUpdates
    post:
      description: Given a login name, sends an email with a link to reset members password.
      operationId: resetMemberPassword
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: ForgotMemberPasswordBody
          in: body
          description: login name
          required: true
          schema:
            $ref: "#/definitions/ForgotMemberPasswordBody"
      responses:
        "200":
          description: Success information
          schema:
            $ref: "#/definitions/UpdatePasswordResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error, errorCodes RESET_MEMBER_PASSWORD
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/members/email/username:
      x-swagger-router-controller: memberUpdates
      post:
        description: Given email and SSN, sends an email link to show members username.
        operationId: forgotMemberUsername
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - $ref: "#/parameters/AccessToken"
          - name: ForgotMemberUsernameBody
            in: body
            description: email and SSN
            required: true
            schema:
              $ref: "#/definitions/ForgotMemberUsernameBody"
        responses:
          "200":
            description: Returns success information
            schema:
              $ref: "#/definitions/UpdatePasswordResponse"
          "400":
            description: Bad request
            schema:
              $ref: "#/definitions/BadRequestResponse"
          "401":
            description: Unauthorized
            schema:
              $ref: "#/definitions/ErrorResponse"
          "500":
            description: Internal server error, FORGOT_MEMBER_USERNAME:5013
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /v1/members/email/token/{token}:
      x-swagger-router-controller: memberUpdates
      get:
        description: Given a SSO token, gets JWT and account id required to reset password.
        operationId: validateResetPasswordToken
        produces:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - name: token
            in: path
            required: true
            type: string
        responses:
          "200":
            description: Returns success information
            schema:
              $ref: "#/definitions/TokensResponse"
          "400":
            description: Bad request
            schema:
              $ref: "#/definitions/BadRequestResponse"
          "401":
            description: Unauthorized
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error, UPDATE_MEMBER_PASSWORD:5012
  /v1/members/contactPreferences:
    x-swagger-router-controller: members
    get:
      description: Returns contact preferences for a member.
      operationId: getContactPreferences
      produces: 
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ContactPreferencesResponse"
        "400":
          description: Bad request
          schema: 
            $ref: "#/definitions/BadRequestResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Updates contact preferences for a member.
      operationId: updateContactPreferences
      produces: 
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: updateContactPreferencesBody
          in: body
          description: Instructions to update contact preferences. Both sms properties to be present or not at all
          required: true
          schema:
            $ref: "#/definitions/UpdateContactPreferencesBody"
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Bad request
          schema: 
            $ref: "#/definitions/BadRequestResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/members/pendingMembers:
      x-swagger-router-controller: members
      get:
        description: Returns pending members specified by partnerUniqueId and partnerCode.
        operationId: getProspects
        produces:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - $ref: "#/parameters/AccessToken"
          - name: partner_unique_id
            in: query
            required: true
            description: partner_unique_id uniquely identifies a user
            type: string
          - name: partner_code
            in: query
            description: partner_code is the code for the partner like EQUIFAX or VERIZON
            required: true
            type: string
        responses:
          "200":
            description: Pending members of a user
            schema:
              $ref: "#/definitions/PendingMembersResponse"
          "400":
            description: Bad request
            schema:
              $ref: "#/definitions/BadRequestResponse"
          "401":
            description: Unauthorized
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"

  /v1/members/pendingMembers/{prospectId}:
    x-swagger-router-controller: memberUpdates
    put:
      description: Cancels a prospect by updating status to cancelled
      operationId: cancelProspect
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: prospectId
          in: path
          description: prospectId uniquely defines a prospect
          required: true
          type: string
      responses:
        "200":
          description: Cancel success message
          schema:
            $ref: "#/definitions/CancelPendingMembersResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal server error, errorCodes DATA_API_QUERY_ERROR
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/members/nortonSOS:
    x-swagger-router-controller: members
    get:
      description: Returns list of norton installed devices for a user
      operationId: getNortonProtectedDevices
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
      responses:
        "200":
          description: Returns list of norton installed devices for a user
          schema:
            $ref: "#/definitions/NortonSOSResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/privacyMonitor/fullfillMember:
    x-swagger-router-controller: privacyMonitor
    post:
      description: Fullfiling a member for LPM.
      operationId: privacyFullfillData
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: FeatureBody
          in: body
          description: contains subject and notes
          required: false
          schema:
            $ref: "#/definitions/FeatureBody"
      responses:
        "200":
          description: indicating Success
          schema:
            $ref: "#/definitions/LPMEnrolledResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/privacyResults:
    x-swagger-router-controller: privacyMonitor
    get:
      description: Redirects to LPM Results
      operationId: privacyResults
      produces:
        - text/html
      parameters:
        - $ref: "#/parameters/ClientId"
      responses:
        "302":
          description: Url to member store.
          headers:
            Location:
              description: "redirect URI"
              type: "string"
          schema:
            type: "string"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/mobile/appconfig:
    x-swagger-router-controller: mobile
    post:
      description: Returns endpoint, feature switch, kill switch, and toll free number data based on version and client.
      operationId: getAppConfig
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - name: appConfigBody
          in: body
          description: App version and client
          required: true
          schema:
            $ref: "#/definitions/AppConfigBody"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AppConfigResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/mobile/appconfigDsp:
    x-swagger-router-controller: mobile
    get:
      description: Returns endpoint, feature switch, kill switch, and toll free number data based on version and client.
      operationId: getAppConfigDsp
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - name: version
          in: query
          description: version of the app in the format of "1.0" or "3.1.2"
          required: true
          type: string
        - name: platform
          in: query
          description: android or ios
          required: true
          type: string
        - name: locale
          in: query
          description: standard language and region format e.g. "en_us"
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AppConfigDspResponse"
        "400":
          description: Bad request, INVALID_VERSION-3000, INVALID_PLATFORM-3001, INVALID_LOCALE-3002
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "500":
          description: Internal server error, APP_CONFIG_CDN_ERR-3003
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/mobile/alerts411:
    x-swagger-router-controller: mobile
    get:
      description: Returns descriptive feature html
      operationId: getAlerts411
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Alerts411Response"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/mobile/push-notification/registration:
    x-swagger-router-controller: mobile
    post:
      description: register device for push notification
      operationId: registerPushDevice
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/AccessToken"
        - $ref: "#/parameters/ClientId"
        - name: PushRegistrationBody
          in: body
          description: register device for push notification request body
          required: true
          schema:
            $ref: "#/definitions/PushRegisterBody"
      responses:
        200:
          description: device and token successfully registered
          schema:
            type: object
        400:
          description: missing either token or os param
          schema:
            $ref: "#/definitions/BadRequestResponse"
    delete:
      description: unregister device for push notification
      operationId: unregisterPushDevice
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/AccessToken"
        - $ref: "#/parameters/ClientId"
        - name: PushUnregisterBody
          in: body
          description: register device for push notification request body
          required: true
          schema:
            $ref: "#/definitions/PushUnregisterBody"
      responses:
        200:
          description: device and token successfully registered
          schema:
            type: object
        400:
          description: missing either token or os param
          schema:
            $ref: "#/definitions/BadRequestResponse"
  /v1/news:
    x-swagger-router-controller: members
    get:
      description: get id news article feed
      operationId: getIdNews
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
      responses:
        200:
          description: device and token successfully registered
          schema:
            $ref: "#/definitions/IDNewsResponse"
        400:
          description: missing either token or os param
          schema:
            $ref: "#/definitions/BadRequestResponse"
        500:  
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/product/description:
    x-swagger-router-controller: product
    get:
      description: Returns product description data for a member, including plan description, provided features with descriptions, and disclaimers.
      operationId: getProductDescription
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
      responses:
        "200":
          description: Product description data
          schema: 
            $ref: "#/definitions/ProductDescriptionResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/support/top:
      x-swagger-router-controller: support
      get:
        description: Returns top articles.
        operationId: getTopArticles
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
        responses:
          "200":
            description: Top articles
            schema:
              $ref: "#/definitions/TopArticlesResponse"
          "400":
            description: Bad request
            schema:
              $ref: "#/definitions/BadRequestResponse"
          "500":
            description: Intenal server error
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /v1/support/categories:
      x-swagger-router-controller: support
      get:
        description: Returns support categories.
        operationId: getCategories
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
        responses:
          "200":
            description: Support categories
            schema:
              $ref: "#/definitions/CategoriesResponse"
          "400":
            description: Bad request
            schema:
              $ref: "#/definitions/BadRequestResponse"
          "500":
            description: Internal server error
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /v1/support/search:
      x-swagger-router-controller: support
      get:
        description: Returns articles matching search.
        operationId: searchArticles
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - name: q
            in: query
            description: query string to find articles
            required: false
            type: string
        responses:
          "200":
            description: Articles
            schema:
              $ref: "#/definitions/SearchArticlesResponse"
          "400":
            description: Bad request
            schema:
              $ref: "#/definitions/BadRequestResponse"
          "500":
            description: Internal server error
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /v1/support/topics:
      x-swagger-router-controller: support
      get:
        description: Returns topics.
        operationId: getTopics
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - name: type
            in: query
            description: Various strings representing categories
            required: false
            type: string
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/TopicsResponse"
          "400":
            description: Bad request
            schema:
              $ref: "#/definitions/BadRequestResponse"
          "500":
            description: Internal server error
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /v1/support/article/{article_id}:
      x-swagger-router-controller: support
      get:
        description: Returns single article.
        operationId: getArticle
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - name: article_id
            in: path
            description: The Article id used to look up the Articles.
            required: true
            type: string
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/ArticleResponse"
          "400":
            description: Bad request
            schema:
              $ref: "#/definitions/BadRequestResponse"
          "500":
            description: Internal server error
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /v1/support/category/{category_name}:
      x-swagger-router-controller: support
      get:
        description: Returns a single category.
        operationId: getCategory
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - name: category_name
            in: path
            description: Category name used for look up.
            required: true
            type: string
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/CategoryResponse"
          "400":
            description: Bad request
            schema:
              $ref: "#/definitions/BadRequestResponse"
          "500":
            description: Internal server error
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /v1/support/related/{category_name}/{article_id}:
      x-swagger-router-controller: support
      get:
        description: Returns a single category.
        operationId: getCategoryAndArticle
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - name: category_name
            in: path
            description: Category name used for look up.
            required: true
            type: string
          - name: article_id
            in: path
            description: Article Id used for look up.
            required: true
            type: string
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/CategoryResponse"
          "400":
            description: Bad request
            schema:
              $ref: "#/definitions/BadRequestResponse"
          "500":
            description: Internal server error
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /v1/support/related/{category_name}:
      x-swagger-router-controller: support
      get:
        description: Returns a single category.
        operationId: getRelatedCategory
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - name: category_name
            in: path
            description: Category name used for look up.
            required: true
            type: string
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/CategoryResponse"
          "400":
            description: Bad request
            schema:
              $ref: "#/definitions/BadRequestResponse"
          "500":
            description: Internal server error
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /v1/support/ticket:
      x-swagger-router-controller: support
      post:
        description: Creates an incident in RN through the CRM api.
        operationId: createCRMCase
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - $ref: "#/parameters/AccessToken"
          - name: TicketBody
            in: body
            description: contains subject and notes
            required: false
            schema:
              $ref: "#/definitions/TicketBody"
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/TicketResponse"
          "400":
            description: Bad request
            schema:
              $ref: "#/definitions/BadRequestResponse"
          "500":
            description: Internal server error
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /v1/terms:
      x-swagger-router-controller: terms
      get:
        description: Returns the latest terms and conditions content.
        operationId: getLatestTerms
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - $ref: "#/parameters/AccessToken"
        responses:
          "200":
            description: Most recent terms and conditions content
            schema:
              $ref: "#/definitions/TermsResponse"
          "400":
            description: Bad request
            schema:
              $ref: "#/definitions/BadRequestResponse"
          "500":
            description: Internal server error
            schema:
              $ref: "#/definitions/ErrorResponse"
      put:
        description: Registers the member has accepted the terms and conditions
        operationId: acceptTerms
        produces:
          - application/json
        consumes:
          - application/json
          - application/octet-stream
        parameters:
          - $ref: "#/parameters/ClientId"
          - $ref: "#/parameters/AccessToken"
          - $ref: "#/parameters/AccountId"
          - name: fcraAccepted
            in: body
            description: Only sent if FCRA is accepted else not passed.
            required: false
            schema:
              $ref: "#/definitions/AcceptTermsBody"
        responses:
          "200":
            description: Registration of member acceptance successful
            schema:
              type: string
          "400":
            description: Bad request
            schema:
              $ref: "#/definitions/BadRequestResponse"
          "500":
            description: Internal server error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /v1/restoration/cases:
      x-swagger-router-controller: restoration
      get:
        description: Returns cases for a member.
        operationId: getCases
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - $ref: "#/parameters/AccessToken"
        responses:
          "200":
            description: Success
            schema:
              $ref: "#/definitions/memberBaseData"
          "400":
            description: Bad request
            schema:
              $ref: "#/definitions/BadRequestResponse"
          "500":
            description: Internal server error
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /v1/restoration/uploadDocument:
    x-swagger-router-controller: restoration
    post:
      description: Uploads restoration documents for a member.
      operationId: uploadDocument
      produces:
        - application/json
      consumes:
        - multipart/form-data
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: file
          in: formData
          description: File for Upload.
          type: file
          required: true
      responses:
        "200":
          description: Message after successful uploading of document.
          schema:
            $ref: "#/definitions/UploadDocuemntResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/modifyAccount:
    x-swagger-router-controller: modifyAccount
    post:
      description: Adds the account information including and primary and supplimental data.
      operationId: addAccountEntry
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: ModifyAccountInsertBody
          in: body
          required: false
          schema:
            $ref: "#/definitions/ModifyAccountInsertBody"
      responses:
        "200":
          description: Returns success information
          schema:
            $ref: "#/definitions/ModifyAccountResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "500":
          description: Internal server error, MODIFY_ACCOUNT_UPDATE_FAILURE:4003
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Updates the account information including and primary and supplimental data.
      operationId: updateAccountEntry
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: ModifyAccountUpdateBody
          in: body
          required: false
          schema:
            $ref: "#/definitions/ModifyAccountUpdateBody"
      responses:
        "200":
          description: Returns success information
          schema:
            $ref: "#/definitions/ModifyAccountResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "500":
          description: Internal server error, MODIFY_ACCOUNT_UPDATE_FAILURE:4002
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: deletes the account information including and primary and supplimental data.
      operationId: deleteAccountEntry
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - name: ModifyAccountDeleteBody
          in: body
          required: false
          schema:
            $ref: "#/definitions/ModifyAccountDeleteBody"
      responses:
        "200":
          description: Returns success information
          schema:
            $ref: "#/definitions/ModifyAccountResponse"
        "400":
          description: Bad request
          schema:
            $ref: "#/definitions/BadRequestResponse"
        "500":
          description: Internal server error, MODIFY_ACCOUNT_DELETE_FAILURE:4001
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/transactions:
    x-swagger-router-controller: transactions
    get:
      description: Returns list of transactions for given memberId.
      operationId: accountTransactions
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - $ref: "#/parameters/AccountId"
        - name: startDate
          in: query
          required: true
          description: The start date for transactions display.
          type: string
        - name: endDate
          in: query
          required: true
          description: The end date for transactions display.
          type: string
        - name: institutionId
          in: query
          required: false
          description: The id of institution to retrieve transactions for.
          type: string
        - name: offset
          in: query
          required: false
          description: Providing offset parameter returns transactions offset by the given value.
          type: string
        - name: rowsToRetrieve
          in: query
          required: false
          description: Number of rows to be retrieved.
          type: string
        - name: sortField
          in: query
          required: false
          description: The field for the transactions to be sorted by.
          type: string
        - name: sortOrder
          in: query
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TransactionsSuccessResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/TransactionsErrorResponse"
  /v1/transactions/institutionAccounts:
    x-swagger-router-controller: transactions
    get:
      description: Returns Institutions for a given memberId.
      operationId: institutionAccounts
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - $ref: "#/parameters/AccountId"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TransactionsSuccessResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/TransactionsErrorResponse"
    delete:
      description: Delete institution for given institutionId using FastLink API.
      operationId: deleteInstitutionLoginFastLink
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - $ref: "#/parameters/AccountId"
        - name: FastLinkDeleteInstitutionLoginRequestBody
          in: body
          description: Delete Institution Login Request Body.
          required: true
          schema:
              $ref: "#/definitions/FastLinkDeleteInstitutionLoginRequestBody"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/FastLinkAccountsDeleteSuccessResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/FastLinkAccountsDeleteErrorResponse"
  /v1/transactions/txmAlertPreference:
    x-swagger-router-controller: transactions
    get:
      description: Returns transactions Alert Preferences for a given memberId.
      operationId: getTxmAlertPreference
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - $ref: "#/parameters/AccountId"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TransactionsSuccessResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/TransactionsErrorResponse"
    put:
      description: Sets Transactions Monitoring Alert Preferences.
      operationId: setTxmAlertPreference
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - $ref: "#/parameters/AccountId"
        - name: preferences
          in: body
          description: Preferences to be set for a user.
          required: true
          schema:
            $ref: "#/definitions/TxmAlertPreferenceBody"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TransactionsSuccessResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/TransactionsErrorResponse"
  /v1/transactions/fastLinkToken:
    x-swagger-router-controller: transactions
    get:
      description: Returns Fast Link Tokens.
      operationId: fastLinkToken
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - $ref: "#/parameters/AccessToken"
        - $ref: "#/parameters/AccountId"
        - name: FastLinkTokenRequestBody
          in: body
          description: Fast Link Token Request Body
          required: true
          schema:
            $ref: "#/definitions/FastLinkTokenRequestBody"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/FastLinkTokenSuccessResponse"
        "500":
          description: Error
          schema:
            $ref: "#/definitions/FastLinkTokenErrorResponse"
  /nsl/oidcAccessCode:
    x-swagger-router-controller: nortonSso
    get:
      description: Validates the code with OIDC id provider.  If code is valid, tokens are returned by id provider.
      operationId: oidcAuthWithAccessCode
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/ClientId"
        - name: code
          in: query
          description: single-use access code to be validated with OIDC id provider
          required: true
          type: string
        - name: spaBundle
          in: query
          description: identifies what type of SPA is calling this endpoint, which dictates what redirect uri is used
          required: true
          type: string
      responses:
        "200":
          description: Returns success information
          schema:
            $ref: "#/definitions/OidcAuthWithAccessCodeResponse"
        "500":
          description: Internal server error
          schema:
            $ref: "#/definitions/ErrorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /nsl/oidcRedirect:
    x-swagger-router-controller: nortonSso
    get:
      description: Validates the code and state with OIDC id provider. Gets NSL tokens. Redirects to FE/home for web and sends one time token to app.
      operationId: oidcAuthWithAccessCode2
      produces:
        - text/plain
        - text/html
      parameters:
        - $ref: "#/parameters/ClientId"
        - name: code
          in: query
          description: single-use access code to be validated with OIDC id provider
          type: string
        - name: state
          in: query
          description: state to be validated with OIDC id provider
          type: string
      responses:
        "302":
          description: For web, redirecting to home page. For app, redirecting to page that fires a postMessage event on which app is listening.
          headers:
            Location:
              description: "redirect URI"
              type: "string"
          schema:
            type: "string"
  /nsl/request:
    x-swagger-router-controller: nortonSso
    get:
      description: Redirects to norton single-sign-on OIDC provider.
      operationId: oidcAuthUrl2
      produces:
        - text/html
      parameters:
        - $ref: "#/parameters/ClientId"
        - name: dest
          in: query
          description: Destination url to go to after successful single-sign-on.
          required: false
          type: string
        - name: memberapp
          in: query
          description: It can be either android or ios.
          required: false
          type: string
        - name: referrer
          in: query
          description: Referrer of the request. It is used in instrumentation.
          required: false
          type: string
      responses:
        "302":
          description: Redirecting to norton sign in page or home page in case of error.
          headers:
            Location:
              description: "redirect URI"
              type: "string"
          schema:
            type: "string"
  /nsl/response:
    x-swagger-router-controller: nortonSso
    post:
      description: Parse SAML response from Norton IDP during single sign on.
      operationId: parseSamlResponse
      produces:
        - text/html
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - $ref: "#/parameters/ClientId"
        - name: SamlResponseBody
          in: body
          description: SamlResponseBody from Norton
          required: true
          schema:
            $ref: "#/definitions/SamlResponseBody"
      responses:
        "302":
          description: Redirecting to home page or destination page if provided in the request. Redirecting to home page incase of error.
          headers:
            Location:
              description: "redirect URI"
              type: "string"
          schema:
            type: "string"
  /v1/states:
      x-swagger-router-controller: modifyAccount
      get:
        description: Retrieves the list of the states of the United States
        operationId: getStates
        produces:
          - application/json
        consumes:
          - application/json
        parameters:
          - $ref: "#/parameters/ClientId"
          - $ref: "#/parameters/AccessToken"
        responses:
          "200":
            description: Returns success information
            schema:
              $ref: "#/definitions/StatesResponse"
          "500":
            description: Internal server error, GET_STATES_FAILURE:4004
            schema:
              $ref: "#/definitions/ErrorResponse"
          default:
            description: Error
            schema:
              $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Alerts411Type:
    type: "object"
    properties:
      name:
        type: "string"
      image:
        type: "string"
      status:
        type: "string"
      statusColor:
        type: "string"
      htmlContent:
        type: "string"
  AlertDetailResponse:
    type: "object"
    properties:
      alertDetail:
        type: "object"
        properties:
            id:
              type: "string"
            actionCode:
              type: "string"
            groupId:
              type: "string"
            isViewedByOwner:
              type: "boolean"
            isMinor:
              type: "boolean"
            ownerFirstName:
              type: "string"
            ownerLastName:
              type: "string"
            alertType:
              type: "string"
            isArchived:
              type: "boolean"
            categoryCode:
              type: "string"
            subCategoryCode:
              type: "string"
            categoryDescription:
              type: "string"
            subCategoryDescription:
              type: "string"
            createdAt:
              type: "string"
            isRead:
              type: "boolean"
            isDispositionable:
              type: "boolean"
            isDuplicateTransaction:
              type: "boolean"
            hasAdvancedDispositionQuestions:
              type: "boolean"
            investigationState:
              type: "string"
            title:
              type: "string"
            subTitle:
              type: "string"
            summaryTitle:
              type: "string"
            alertIcon:
              type: "string"
            transactionAmount:
              type: "string"
            needsDisposition:
              type: "boolean"
            isHygenicsBaseline:
              type: "boolean"
            contactInfo:
              type: "string"
            accountName:
              type: "string"
            sourceDescription:
              type: "string"
            alertPostDate:
              type: "string"
            merchantName:
              type: "string"
            detail:
              type: "object"
            bucket:
              type: "string"
  AlertListResponse:
    type: "object"
    properties:
      totalCount:
        type: "number"
      unreadCount:
        type: "number"
      summarySize:
        type: "number"
      alertList:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "string"
            actionCode:
              type: "string"
            groupId:
              type: "string"
            isViewedByOwner:
              type: "boolean"
            isMinor:
              type: "boolean"
            ownerFirstName:
              type: "string"
            ownerLastName:
              type: "string"
            alertType:
              type: "string"
            isArchived:
              type: "boolean"
            categoryCode:
              type: "string"
            subCategoryCode:
              type: "string"
            categoryDescription:
              type: "string"
            subCategoryDescription:
              type: "string"
            createdAt:
              type: "string"
            isRead:
              type: "boolean"
            isDispositionable:
              type: "boolean"
            isDuplicateTransaction:
              type: "boolean"
            hasAdvancedDispositionQuestions:
              type: "boolean"
            investigationState:
              type: "string"
            title:
              type: "string"
            subTitle:
              type: "string"
            summaryTitle:
              type: "string"
            alertIcon:
              type: "string"
            transactionAmount:
              type: "string"
            bucket:
              type: "string"
  UpdatePasswordResponse:
    required:
      - response
    properties:
      response:
        type: "object"
  ModifyAccountResponse:
      type: "object"
      properties:
        response:
          type: "object"
  TopArticlesResponse:
    description: TopArticlesBodyResponse
    properties:
      articles:
        type: "array"
        items:
          type: "object"
          properties:
            title:
              type: "string"
            id:
              type: "string"
            summary:
              type: "string"
            categoryname:
             type: "boolean"
  CategoriesResponse:
    description: CategoriesBodyResponse
    properties:
     success:
       type: "boolean"
     Categories:
       type: "array"
       items:
         type: "object"
         properties:
           label:
             type: "string"
           name:
             type: "string"
           articlesUri:
             type: "string"
           type:
            type: "string"
  SearchArticlesResponse:
    description: ArticlesSearchResponse
    properties:
      articles:
        type: "array"
        items:
          type: "object"
          properties:
            title:
              type: "string"
            id:
              type: "string"
            summary:
              type: "string"
            categoryname:
             type: "boolean"
  TopicsResponse:
    description: TopicsResponse
    properties:
      Categories:
        type: "array"
        items:
          type: "object"
          properties:
            label:
              type: "string"
            name:
              type: "string"
            articlesUri:
              type: "string"
            type:
             type: "string"
  ArticleResponse:
    description: ArticleDataResponse
    properties:
      id:
        type: "string"
      summary:
        type: "string"
      title:
        type: "string"
      shortTitle:
        type: "string"
      description:
        type: "string"
      disclosure:
        type:
              - "string"
              - "null"
      relatedUri:
        type: "string"
      feedbackUri:
        type: "string"
  CategoryResponse:
    description: CategoryDataResponse
    properties:
      articles:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "string"
            summary:
              type: "string"
            title:
              type: "string"
            selfUri:
             type: "string"
  TicketResponse:
    description: TicketDataResponse
    properties:
      id:
       type: "integer"
  memberBaseData:
    type: "object"
    properties:
      guid:
        type: "integer"
      memberName:
        type: "string"
      parentCaseDtails:
        type: "array"
        items:
          type: "object"
          properties:
            parentCase:
              type: "integer"
            parentCaseOwner:
              type: "string"
            parentCaseStatus:
              type: "string"
            parentCaseStartDateTime:
              type: "string"
              format: "date-time"
            parentCaseEndDateTime:
              type: "string"
              format: "date-time"
            parentCaseType:
              type: "string"
            parentCaseAgent:
              type: "string"
            reason:
              type: "string"
            childCaseDetails:
              type: "string"
            documentCheckList:
              type: "array"
              items:
                type: "object"
                properties:
                  documentType:
                    type: "string"
                  documentName:
                    type: "string"
                  received:
                    type: "boolean"
                  approved:
                    type: "boolean"
                  denied:
                    type: "boolean"
                  documentNote:
                    type: "string"
                  memberDescription:
                    type: "string"
                  documentStatus:
                    type: "string"
  UploadDocuemntResponse:
    description:  UploadDocumentResponse
    properties:
      message:
        type: string
      x:
        type: string
  BillingMembersResponse:
    type: "array"
    items:
      type: "object"
      properties:
        isAccountContact:
          type: "boolean"
        cycle:
          type: "string"
        price:
          type: "number"
        billing:
          type: "object"
          properties:
            billingDateAndStatusByMember:
              type: "object"
              properties:
                billingStatus:
                  type: "string"
                nextBillingDate:
                  type: "string"
  StatesResponse:
    description: ListOfStates
    type: object
    properties:
      response:
        type: object
  OamAllProvidersResponse:
    description: Available providers to connect.
    type: object
    properties:
      response:
        type: object
  OamConnectedAccountsResponse:
    description: Connected accounts of a user.
    type: object
    properties:
      response:
        type: object
  OamDisconnectAccountResponse:
    description: Disconnect an account.
    type: object
    properties:
      response:
        type: object
  OamAnalyzeAccountResponse:
      description: Disconnect an account.
      type: object
      properties:
        response:
          type: object
  OamActivitiesScannedOverviewResponse:
    description: Overview of scanned activities across connected accounts.
    type: object
    properties:
      response:
        type: object
  OamPotentialThreatsResponse:
    description: Potential threats from activities scanned.
    type: object
    properties:
      response:
        type: object
  OamDismissThreatResponse:
    description: Dismiss Threat.
    type: object
    properties:
      response:
        type: object
  OamDeleteThreatResponse:
    description: Delete threat.
    type: object
    properties:
      response:
        type: object
  DigitalCleanerProvidersResponse:
    description: ListOfProviders
    type: object
    properties:
      response:
        type: object
        properties:
          success:
            type: "boolean"
          code:
            type: "number"
          providers:
            type: "object"
            properties:
              EMAIL:
                type: "array"
                items:
                  $ref: "#/definitions/DigitalCleanerProviderTypeResponse"
              SOCIAL:
                type: "array"
                items:
                  $ref: "#/definitions/DigitalCleanerProviderTypeResponse"
              STORAGE:
                type: "array"
                items:
                  $ref: "#/definitions/DigitalCleanerProviderTypeResponse"
  DigitalCleanerProviderTypeResponse:
    description: Proviver type response
    type: "object"
    properties:
      provider:
        type: "string"
      connection_url:
        type: "string"
      icons:
        type: "object"
        properties:
          1xpng:
            type: "string"
          2xpng:
            type: "string"
          3xpng:
            type: "string"
          svg:
            type: "string"
  TokensByClientCredentialsBody:
    description: tokensByClientCredentials body
    properties:
      origin:
        type: string
        description: application name - webstore / agentproxy / webapp / memberapp
      agentName:
        type: string
        description: agent desktop workflow, agent name
    required:
      - origin
  TokensBySsoTokenBody:
    description: tokensBySsoToken body
    properties:
      include_member_data:
        type: boolean
        description: true if response should include member data, false otherwise
  SsoTokensBody:
    description: SsoTokensBody
    properties:
      destinationapp:
        type: string
        description: application name - memberwebapp
    required:
      - destinationapp
  UpdateAlertBody:
    description: Parameters for updateAlert body
    properties:
      disposition:
        type: boolean
        description: The disposition of the alert
      questionId:
        type: number
        description: sequence number of last advanced question (if any)
    required:
      - disposition
  UpdateMemberPasswordBody:
    description: UpdateMemberPasswordBody
    properties:
      password:
        type: string
        description: new password
    required:
      - password
  UpdateMemberUsernameBody:
      description: UpdateMemberUsernameBody
      properties:
        login_name:
          type: string
          description: new username
      required:
        - login_name
  ForgotMemberPasswordBody:
    description: ForgotMemberPasswordBody
    properties:
      login_name:
        type: string
        description: login name
    required:
      - login_name
  ForgotMemberUsernameBody:
    description: ForgotMemberUsernameBody
    properties:
      email:
        type: string
        description: communication email
      ssn:
        type: string
        description: last 4 ssn
    required:
      - email
      - ssn
  OidcAuthUrlResponse:
    description: json containing oidc auth url
    properties:
      authUrlWithRedirect:
        type: string
        description: oidc auth url
  OidcAuthWithAccessCodeResponse:
    description: json containing success status
    properties:
      status:
        type: string
        description: success status
  SsoTokenResponse:
    description: sso token
    properties:
      sso_token:
        type: string
        description: sso token
  OidcAuthUrlBody:
    description: OidcAuthUrlBody
    properties:
      spaBundle:
        type: string
        description: identifies what type of SPA is calling this endpoint, which dictates what redirect uri is used
        enum:
          - DSP
          - DWM
  TokensByNslTokensBody:
    description: TokensByNslTokensBody
    properties:
      appType:
        type: string
        description: identifies type of SPA or indicates 'MOBILE' for mobile app call
        enum:
          - DSP
          - DWM
          - CCT
          - DSP_IOS
          - DSP_ANDROID
      token:
        type: string
        description: NSL JWT
  TokensByNslClientBody:
    description: TokensByNslClientBody
    properties:
      appType:
        type: string
        description: identifies type of SPA or indicates 'MOBILE' for mobile app call
        enum:
          - DSP
          - DWM
          - DSP_IOS
          - DSP_ANDROID
  LogBody:
    description: Log body
    properties:
      data:
        type: array
        description: array of strings
        items:
          type: string
  TokensByPasswordBody:
    description: tokensByPassword body
    properties:
      username:
        type: string
        description: username to log into client= 3jajacnn
      password:
        type: string
        description: password to log into client= dummypwd
      member_id:
        type: string
        description: member id
      sso_token:
        type: string
        description: sso token
    required:
      - username
      - password
  TokensResponse:
    description: response to logging in with tokensByPassword
    properties:
      access_token:
        type: string
        description: oauth access token
      token_type:
        type: string
      refresh_token:
        type: string
      primaryMember:
        $ref: "#/definitions/MemberInfo"
      associatedMembers:
        type: array
        items:
          $ref: "#/definitions/MemberInfo"
  MemberInfoResponse:
    description: response for independent memberinfo call
    properties:
      primaryMember:
        $ref: '#/definitions/MemberInfo'
      associatedMembers:
        type: array
        items:
          $ref: '#/definitions/MemberInfo'
  PendingMembersResponse:
    description: PendingMembersResponse
    properties:
      pendingMembers:
        type: "array"
        items:
          type: "object"
          properties:
            id:
              type: "string"
            firstName:
              type: "string"
            lastName:
              type: "string"
  CancelPendingMembersResponse:
    description: PendingMembersResponse
    properties:
      items:
        type: "object"
        properties:
          success:
            type: "string"
  BillingInfoResponse:
    type: "object"
    properties:
      paymentMethodId:
        type: "string"
      cardTypeCode:
        type: "string"
      nameOnCard:
        type: "string"
      cardNumber:
        type: "string"
      cvv:
        type: "null"
      expirationYear:
        type: "string"
      expirationMonth:
        type: "string"
      billingAddress:
        $ref: "#/definitions/BillingAddress"
  BillingInfoUpdateBody:
    type: "object"
    properties:
      paymentMethodId:
        type: "string"
      cardTypeCode:
        type: "string"
      nameOnCard:
        type: "string"
      cardNumber:
        type: "string"
      cvv:
        type: "string"
      expirationYear:
        type: "string"
      expirationMonth:
        type: "string"
      billingAddress:
        $ref: "#/definitions/BillingAddress"
    required:
    - paymentMethodId
    - expirationYear
    - expirationMonth
    - billingAddress
  BillingInfoAddBody:
    type: "object"
    properties:
      cardTypeCode:
        type: "string"
      nameOnCard:
        type: "string"
      cardNumber:
        type: "string"
      cvv:
        type: "string"
      expirationYear:
        type: "string"
      expirationMonth:
        type: "string"
      billingAddress:
        $ref: "#/definitions/BillingAddress"
    required:
    - expirationYear
    - expirationMonth
    - billingAddress
  BillingAddress:
    type: "object"
    properties:
      street1:
        type: "string"
      city:
        type: "string"
      stateCode:
        type: "string"
      postalCode:
        type: "string"
    required:
    - street1
    - city
    - stateCode
    - postalCode
  NortonSOSResponse:
    description: NortonSOSResponse
    properties:
      success:
        type: "boolean"
      totalDevicesLimit:
        type: "number"
      totalDevicesProtected:
        type: "number"
      protectedDevices:
        type: "array"
        items:
          type: "object"
          properties:
            name:
              type: "string"
            osId:
              type: "number"
      downloadURL:
        type: "string"
      pin:
        type: "string"
  LPMEnrolledResponse:
    description: LPMEnrolledResponse
    properties:
      isEnrolled:
        type: "boolean"
  MemberInfo:
    type: object
    properties:
      accountId:
        type: string
      accountGuid:
        type: string
      accountStatusCode:
        type: string
      lastName:
        type: string
      firstName:
        type: string
      middleName:
        type: string
      userName:
        type: string
      relationship:
        type: string
      primaryAdministrator:
        type: boolean
      yearOfBirth:
        type: string
      primaryEmail:
        type: object
      primaryPhone:
        type: object
      primaryAddress:
        $ref: "#/definitions/MonitoredAddress"
      partnerCode:
        type: string
      partnerUniqueId:
        type: string
      partnerLogoURL:
        type: string
      partnerShowSplash:
        type: boolean
      swappable:
        type: boolean
      verbalPasscode:
        type: boolean
      enrollmentDate:
        type: string
      plan:
        description: combine subscription BPM and old mobile ProductFeature properties
        type: object
        properties:
          canChangePlan:
            type: boolean
          canChangeBillingCycle:
            type: boolean
          hasNoFeatures:
            type: boolean
          permissionGranted:
            type: boolean
          name:
            type: string
          promoCode:
            type: string
          packageCode:
            type: string
          enrollmentTerm:
            type: string
          needsTermsConditions:
            type: boolean
          showFcra:
            type: boolean
          productFeatures:
            type: object
            properties:
              transactionMonitoring:
                $ref: "#/definitions/FeatureObject"
              investmentLoans:
                $ref: "#/definitions/FeatureObject"
              upgradeOption:
                type: boolean
              creditScore_1B:
                $ref: "#/definitions/FeatureObject"
              creditScore_3B:
                $ref: "#/definitions/FeatureObject"
              creditMonitoring_1B:
                $ref: "#/definitions/FeatureObject"
              creditMonitoring_3B:
                $ref: "#/definitions/FeatureObject"
              creditReports_1B:
                $ref: "#/definitions/FeatureObject"
              creditReports_3B:
                $ref: "#/definitions/FeatureObject"
              creditHistory:
                $ref: "#/definitions/FeatureObject"
              nortonSecurityOnline:
                $ref: "#/definitions/FeatureObject"
              privacyMonitor:
                $ref: "#/definitions/FeatureObject"
      needsOnboarding:
        type: boolean
      needsDSPOnboarding:
        type: boolean
      monitoredAccounts:
        type: object
        properties:
          bankAccounts:
            type: object
            properties:
              maxCount:
                type: number
              entries:
                type: array
                items:
                  $ref: '#/definitions/MonitoredBankAccount'
          creditDebitCards:
            type: object
            properties:
              maxCount:
                type: number
              entries:
                type: array
                items:
                  $ref: '#/definitions/MonitoredCreditDebitCard'
          addresses:
            type: object
            properties:
              maxCount:
                type: number
              entries:
                type: array
                items:
                  $ref: '#/definitions/MonitoredAddress'
          phoneNumbers:
            type: object
            properties:
              maxCount:
                type: number
              entries:
                type: array
                items:
                  $ref: '#/definitions/MonitoredPhoneNumber'
          emails:
            type: object
            properties:
              maxCount:
                type: number
              entries:
                type: array
                items:
                  $ref: '#/definitions/MonitoredEmail'
          mothersMaidenName:
             type: object
             properties:
               maxCount:
                 type: number
               entries:
                 type: array
                 items:
                   $ref: '#/definitions/MonitoredMothersMaidenName'
          driversLicense:
            type: object
            properties:
              maxCount:
                type: number
              entries:
                type: array
                items:
                  $ref: '#/definitions/MonitoredDriversLicense'
          insuranceCards:
            type: object
            properties:
              maxCount:
                type: number
              entries:
                type: array
                items:
                  $ref: '#/definitions/MonitoredInsuranceCard'
  FeatureObject:
    type: object
    required:
      - featureStatus
      - fulfillmentStatus
    properties:
      featureStatus:
        $ref: "#/definitions/FeatureStatus"
      fulfillmentStatus:
        $ref: "#/definitions/FulfillmentStatus"
  FeatureStatus:
    type: string
    enum:
      - AVAILABLE
      - UPGRADE
      - NOT_AVAILABLE
      - ACTIVATE
  FulfillmentStatus:
    type: string
    enum:
      - ENROLLED
      - PENDING
      - CANCELLED
      - ERROR
      - NOT_AVAILABLE
  TicketBody:
    description: Ticket body
    required:
    - subject
    - ticketType
    properties:
      subject:
        type: string
        description: subject of the ticket
      notes:
        type: string
        description: Notes for the ticket
      ticketType:
        type: string
        description: Type of ticket
        enum:
        - SUPPORT
        - FEEDBACK
      screen:
        type: string
        description: The screen or URL where the ticket creation was initiated
      user_agent:
        type: string
        description: The browser user-agent, or the device/OS for mobile
      platform:
        type: string
        description:  Android, iOS, or Web
  FeatureBody:
    description: Feature body
    properties:
      packageName:
        type: string
        description: package Name
  MonitoredAddress:
    type: object
    properties:
      id:
        type: string
      city:
        type: string
      postalCode:
        type: string
      stateCode:
        type: string
      street1:
        type: string
      street2:
        type: string
      countryCode:
        type: string
  MonitoredBankAccount:
    type: object
    properties:
      id:
        type: string
      accountNumber:
        type: string
      name:
        type: string
  MonitoredCreditDebitCard:
    type: object
    properties:
      id:
        type: string
      cardNumber:
        type: string
      cardType:
        type: string
  MonitoredDriversLicense:
    type: object
    properties:
      id:
        type: string
      driversLicenseNumber:
        type: string
      stateCode:
        type: string
  MonitoredEmail:
    type: object
    properties:
      id:
        type: string
      emailAddress:
        type: string
  MonitoredInsuranceCard:
    type: object
    properties:
      id:
        type: string
      policyNumber:
        type: string
      providerName:
        type: string
  MonitoredMothersMaidenName:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
  MonitoredPhoneNumber:
    type: object
    properties:
      id:
        type: string
      phoneNumber:
        type: string
  PrimaryEmail:
    type: object
    properties:
      emailAddress:
        type: string
      type:
        type: string
    required:
      - emailAddress
      - type
  PrimaryPhone:
    type: object
    properties:
      phoneNumber:
        type: string
      type:
        type: string
      countryCode:
        type: string
    required:
      - phoneNumber
      - type
      - countryCode
  PrimaryAddress:
    type: object
    properties:
      street1:
        type: string
      street2:
        type: string
      postalCode:
        type: string
      postalCodeExtension:
        type: string
      city:
        type: string
      region:
        type: string
      stateCode:
        type: string
      countryCode:
        type: string
    required:
      - street1
      - city
      - stateCode
      - countryCode
  MonitoredAddresses:
    type: object
    properties:
      id:
        type: string
      street1:
        type: string
      street2:
        type: string
      postalCode:
        type: string
      postalCodeExtension:
        type: string
      city:
        type: string
      region:
        type: string
      stateCode:
        type: string
      countryCode:
        type: string
  MonitoredPhoneNumbers:
    type: object
    properties:
      id:
        type: string
      phoneNumber:
        type: string
      countryCode:
        type: string
  VerbalPasscode:
    type: object
    properties:
      passcode:
        type: string
    required:
      - passcode
  TermsResponse:
    description: response to /terms containing latest terms and conditions content
    required:
      - version
      - description
      - displayText
      - effectiveDate
    properties:
      version:
        type: string
      description:
        type: string
      displayText:
        type: string
      effectiveDate:
        type: string
  AcceptTermsBody:
    description: Body for Accept Terms
    type: object
  CreditJwtTokenResponse:
    description: response to credit/JwtToken
    properties:
      vendorInfo:
        type: object
        properties:
          scope:
            type: string
          equifaxEndPoint:
            type: string
          equifaxApiKey:
            type: string
      jwtToken:
        type: string
  AppConfigBody:
    description: app config body
    required:
      - version
      - client
    properties:
      version:
        type: string
        description: app version, ex 1.8
      client:
        type: string
        description: in {Android, iOS}
      language:
        type: string
        description: Language code in format similar to default en-US
  AppConfigResponse:
    description: Endpoints, toll free numbers, kill switch, and feature switch objects
    properties:
      endpoints:
        type: object
        additionalProperties:
          type: string
      tollFreeNumbers:
        type: object
        additionalProperties:
          type: string
      killSwitch:
        type: object
        properties:
          stopApp:
            type: boolean
            description: Activity of killSwitch on this version/client
          stopAppHtml:
            type: string
            description: Html about kill switch for display in app
      featureSwitch:
        type: object
        additionalProperties:
          type: boolean
      errorMessages:
        type: object
        description: errorCode->errorMessage mapping
      content:
        type: object
        properties:
          activateCreditScore:
            $ref: '#/definitions/Content'
          activateCreditMonitoring:
            $ref: '#/definitions/Content'
          upsellTransactionMonitoring:
            $ref: '#/definitions/Content'
          upsellCreditScoresEfx:
            $ref: '#/definitions/Content'
          upsellCreditScoresExp:
            $ref: '#/definitions/Content'
          upsellCreditScoresTu:
            $ref: '#/definitions/Content'
  AppConfigDspResponse:
    description: Endpoints, toll free numbers, kill switch, and feature switch objects
    properties:
      endpoints:
        type: object
        additionalProperties:
          type: string
      tollFreeNumbers:
        type: object
        additionalProperties:
          type: string
      killSwitch:
        type: boolean
        description: Activity of killSwitch on this version/client
      featureSwitch:
        type: object
        additionalProperties:
          type: boolean
      errorMessages:
        type: object
        description: errorCode->errorMessage mapping
      content:
        type: object
        properties:
          activateCreditScore:
            $ref: '#/definitions/Content'
          activateCreditMonitoring:
            $ref: '#/definitions/Content'
          upsellTransactionMonitoring:
            $ref: '#/definitions/Content'
          upsellCreditScoresEfx:
            $ref: '#/definitions/Content'
          upsellCreditScoresExp:
            $ref: '#/definitions/Content'
          upsellCreditScoresTu:
            $ref: '#/definitions/Content'
          killSwitchHtml:
            $ref: '#/definitions/Content'
  Alerts411Response:
    description: Descriptive alert types html
    properties:
      title:
        type: string
        description: title to be displayed in app
      types:
        type: array
        items:
          $ref: "#/definitions/Alerts411Type"
  RefreshTokenBody:
    description: refresh token post body
    properties:
      refresh_token:
        type: string
        description: if app, then token to use to refresh access token
  ErrorResponse:
    description: error response
    type: "object"
    properties:
      errorCode:
        type: number
  BadRequestResponse:
    description: Error response caused by bad request. A superset of swagger response details and our errorCode. When member-api catches a bad request, it will provide errorCode. When swagger does, it will provide all fields but errorCode.
    type: object
    properties:
      errorCode:
        description: Our error code. Other properties are swagger's, and will appear when swagger catches a bad request.
        type: number
      message:
        type: string
      code:
        type: string
      failedValidation:
        type: boolean
      results:
        type: object
        properties:
          errors:
            type: array
            items:
              type: object
      path:
        type: array
        items:
          type: string
      paramName:
        type: string
  HealthResponse:
    description: response to health check
    properties:
      status:
        type: string
        description: up or down
  NslAccessCodeBody:
      description: access code to be verified with NSL to obtain Norton account guid
      properties:
        nslAccessCode:
          type: string
  SamlResponseBody:
    description: SAML response body from Norton
    properties:
      SAMLResponse:
        type: string
      RelayState:
        type: string
  UpdateOnboardingFlagBody:
    description: updateOnboardingFlag
    type: object
    properties:
      onboardingFlag:
        type: string
  ModifyAccountInsertBody:
    description: modifyAcccountBody
    type: object
    properties:
      addresses:
        $ref: '#/definitions/MonitoredAddresses'
      phoneNumbers:
        $ref: '#/definitions/MonitoredPhoneNumbers'
      emails:
        $ref: '#/definitions/MonitoredEmail'
      insuranceCards:
        $ref: '#/definitions/MonitoredInsuranceCard'
      creditDebitCards:
        $ref: '#/definitions/MonitoredCreditDebitCard'
      driversLicense:
        $ref: '#/definitions/MonitoredDriversLicense'
      bankAccounts:
        $ref: '#/definitions/MonitoredBankAccount'
      mothersMaidenName:
        $ref: '#/definitions/MonitoredMothersMaidenName'
  ModifyAccountUpdateBody:
    description: modifyAcccountBody
    type: object
    properties:
      primaryEmail:
        $ref: '#/definitions/PrimaryEmail'
      primaryPhone:
        $ref: '#/definitions/PrimaryPhone'
      primaryAddress:
        $ref: '#/definitions/PrimaryAddress'
      addresses:
        $ref: '#/definitions/MonitoredAddresses'
      phoneNumbers:
        $ref: '#/definitions/MonitoredPhoneNumbers'
      emails:
        $ref: '#/definitions/MonitoredEmail'
      insuranceCards:
        $ref: '#/definitions/MonitoredInsuranceCard'
      creditDebitCards:
        $ref: '#/definitions/MonitoredCreditDebitCard'
      driversLicense:
        $ref: '#/definitions/MonitoredDriversLicense'
      bankAccounts:
        $ref: '#/definitions/MonitoredBankAccount'
      mothersMaidenName:
        $ref: '#/definitions/MonitoredMothersMaidenName'
      verbalPasscode:
        $ref: '#/definitions/VerbalPasscode'
  ModifyAccountDeleteBody:
    description: modifyAcccountBody
    type: object
    properties:
      addresses:
        $ref: '#/definitions/MonitoredAddresses'
      phoneNumbers:
        $ref: '#/definitions/MonitoredPhoneNumbers'
      emails:
        $ref: '#/definitions/MonitoredEmail'
      insuranceCards:
        $ref: '#/definitions/MonitoredInsuranceCard'
      creditDebitCards:
        $ref: '#/definitions/MonitoredCreditDebitCard'
      driversLicense:
        $ref: '#/definitions/MonitoredDriversLicense'
      bankAccounts:
        $ref: '#/definitions/MonitoredBankAccount'
      mothersMaidenName:
        $ref: '#/definitions/MonitoredMothersMaidenName'
  ProductDescriptionResponse:
    type: object
    required:
      - disclaimersHtml
    properties:
      disclaimersHtml:
        type: string
      termsOfService:
        type: string
      additionalProperties:
        type: array
        items:
          $ref: '#/definitions/ProductDescription'
  ProductDescription:
    type: object
    required:
      - planDescription
      - hasPlanDetailsV2
      - serviceDescriptions
    properties:
      planDescription:
        type: string
      hasPlanDetailsV2:
        type: boolean
      serviceDescriptions:
        type: array
        items:
          type: object
          required:
            - name
            - description
          properties:
            name:
              type: string
            subTitle:
              type: string
            upgradeText:
              type: string
            icon:
              type: string
            hasTitle:
              type: boolean
            tileRank:
              type: number
            description:
              type: string
  Content:
    description: Content in the format of title, message, button title, button action link.
    type: object
    properties:
      title:
        type: string
        description: Title of the content
      message:
        type: string
        description: Message to be displayed
      buttonTitle:
        type: string
        description: Text to be displayed on the button
      buttonAction:
        type: string
        description: Action to perform(in the form of a Uri), actions supported as of now are http(s) and tel://
  PushRegisterBody:
    description: register device for push notification
    type: object
    required:
      - os
      - deviceToken
      - deviceId
    properties:
      os:
        type: string
      deviceToken:
        type: string
      deviceId:
        type: string
      appId:
        type: string
        default: 'lifelock_memberapp'

  PushUnregisterBody:
    description: unregister device for push notification
    type: object
    required:
      - deviceId
    properties:
      deviceId:
        type: string
  ContactPreferencesResponse:
    description: Contact preferencedata, including email, sms, and voice
    type: object
    properties:
      email:
        $ref: "#/definitions/ContactPreference"
      voice:
        $ref: "#/definitions/ContactPreference"
      sms:
        $ref: "#/definitions/ContactPreference"
  ContactPreference:
    type: object
    required:
      - value
      - optIn
      - verified
    properties:
      value:
        type: string
      optIn:
        type: boolean
      verified:
        type: boolean
  UpdateContactPreferencesBody:
    description: smsNumber and smsOptIn are both required to update sms preferences if desired
    type: object
    properties:
      smsNumber:
        type: string
      smsOptIn:
        type: boolean
      voiceOptIn:
        type: boolean
  IDNewsResponse:
    description: article feed
    type: object
    properties:
      response:
        description: Unneeded but present object in response from legacy implementation
        type: object
        properties:
          code:
            type: number
          success:
            type: boolean
      articles:
        description: article content
        type: array
        items:
          $ref: "#/definitions/IDNewsArticle"
  IDNewsArticle:
    type: object
    required:
      - title
      - articleId
      - summary
      - body
      - url
      - datePosted
      - dateUpdated
    properties:
      title:
        type: string
      articleId:
        type: number
      summary:
        type: string
      body:
        type: string
      url:
        type: string
      topStory:
        type: boolean
      datePosted:
        type: string
      dateUpdated:
        type: string
      images:
        type: array
        items:
          type: object
          properties:
            imageId:
              type: string
            imageType:
              type: number
      categories:
        type: array
        items:
          type: object
          required:
            - categoryName
          properties:
            categoryName:
              type: string
      relatedArticles:
        type: array
        items:
          $ref: "#/definitions/IDNewsArticle"
  TxmAlertPreferenceBody:
    description: Request body for setTxmAlertPreference
    type: object
    properties:
      preferences:
        $ref: "#/definitions/Preferences"
  Preferences:
    description: Preferences object for setting Transactions Alert Preferences
    type: object
    properties:
      transaction:
        type: string
      transfer:
        type: string
      withdrawal:
        type: string
  TransactionsSuccessResponse:
    type: "object"
    properties:
      response:
        type: "object"
  TransactionsErrorResponse:
    description: Transactions Error Response
    type: "object"
  DeleteInstitutionLoginRequestBody:
    description: Delete Institution Login Request Body.
    type: object
    properties:
      args:
        type: object
        properties:
          request:
            $ref: "#/definitions/DeleteInstitutionLoginRequestObject"
  DeleteInstitutionLoginRequestObject:
    description: Request object inside args object to be passed.
    type: object
    properties:
      memberId:
        type: string
      institutionId:
        type: string
      memSiteAccountId:
        type: string
  FastLinkTokenRequestBody:
    description: Request object to obtain fast link token.
    type: object
    properties:
      memberId:
        type: string
      appScope:
        type: string
  FastLinkTokenSuccessResponse:
    description: FastLinkToken Success Response
    type: object
    properties: 
      memberGuid: 
        type: string
  FastLinkTokenErrorResponse:
    description: FastLinkToken Error Response
    type: object
    properties:
      memberGuid: 
        type: string
      tokenError:
        type: object
      tokenResponse: 
        type: object
  FastLinkAccountsSuccessResponse:
    description: Fast Link List of Accounts Success Response
    type: object
  FastLinkAccountsErrorResponse:
    description: Fast Link List of Accounts Error Response
    type: object
  FastLinkDeleteInstitutionLoginRequestBody:
    description: Delete Institution Login Request Body for FastLink API.
    type: object
    properties:
      memSiteAccountId:
        type: string
  FastLinkAccountsDeleteSuccessResponse:
    description: Fast Link List of Accounts Success Response
    type: object
  FastLinkAccountsDeleteErrorResponse:
    description: Fast Link List of Accounts Error Response
    type: object